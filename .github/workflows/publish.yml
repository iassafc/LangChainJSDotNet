name: "Publish NuGet"

on:
  workflow_dispatch:

env:
  PROJECT_PATH: 'src/LangChainJSDotNet/LangChainJSDotNet.csproj'
  PACKAGE_OUTPUT_DIRECTORY: ${{ github.workspace }}\output
  NUGET_SOURCE_URL: 'https://api.nuget.org/v3/index.json'

jobs:
  publish:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout branch'
        uses: actions/checkout@v3

      - name: 'Get version'
        id: get_version
        uses: greenygh0st/net-proj-release-version@v1
        with:
          PROJ_FILE: "src/LangChainJSDotNet/LangChainJSDotNet.csproj"

      - name: 'Install dotnet'
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.x

      - name: 'Install npm dependencies'
        run: npm install
        working-directory: src/LangChainJSDotNet

      - name: 'Restore packages'
        run: dotnet restore ${{ env.PROJECT_PATH }}

      - name: 'Build project'
        run: dotnet build ${{ env.PROJECT_PATH }} --no-restore --configuration Release

      - name: 'Pack project'
        run: dotnet pack ${{ env.PROJECT_PATH }} --no-restore --no-build --configuration Release --include-symbols --output ${{ env.PACKAGE_OUTPUT_DIRECTORY }}

      - name: 'Create tag'
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag -a v${{ steps.get_version.outputs.RELEASE_VERSION }} -m "v${{ steps.get_version.outputs.RELEASE_VERSION }}"
          git push origin v${{ steps.get_version.outputs.RELEASE_VERSION }}

      - name: 'Build Changelog'
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v4
        env:
          toTag: v${{ steps.get_version.outputs.RELEASE_VERSION }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Create Release'
        uses: ncipollo/release-action@v1
        with:
          body: ${{steps.build_changelog.outputs.changelog}}
          tag: v${{ steps.get_version.outputs.RELEASE_VERSION }}

      - name: 'Push package'
        run: dotnet nuget push ${{ env.PACKAGE_OUTPUT_DIRECTORY }}\*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s ${{ env.NUGET_SOURCE_URL }} --skip-duplicate